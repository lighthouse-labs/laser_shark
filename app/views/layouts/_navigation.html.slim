/ navigation styled for Bootstrap 3.0
nav.navbar.navbar-inverse.navbar-embossed.navbar-fixed-top role="navigation"
  .navbar-header
    button.navbar-toggle data-target=".navbar-collapse" data-toggle="collapse" type="button"
      span.sr-only Toggle navigation
  .collapse.navbar-collapse
    ul.nav.navbar-nav.navbar-left
      li
        = link_to :welcome
          i.fa.fa-home
          |  Home
      li
        = link_to setup_path
          i.fa.fa-paper-plane-o
          |  Setup
      - if current_user && !current_user.completed_registration?
        li
          = link_to new_registration_path
            i.fa.fa-sign-in
            |  Complete Signup
      
      - if teacher? || active_student? || alumni?
        li
          = link_to day_path('today')
            i.fa.fa-calendar
            |  Schedule
      - if teacher? || active_student? || alumni?
        li
          = link_to teachers_path
            i.fa.fa-group
            |  Teachers

        - if teacher?
          li.dropdown.student
            = link_to "#", :class => "dropdown-toggle", :"data-toggle" => "dropdown"
              i.fa.fa-group
              |  Students
              b.caret
            span.dropdown-arrow
            ul.dropdown-menu
              - cohorts.each do |cohort|
                li
                  = link_to cohort_link(cohort), cohort_students_path(cohort)
        - else
          li.dropdown.student
            = link_to students_path
              i.fa.fa-group
              |  Classmates
            
      - if teacher? 
        li
          = link_to :assistance_requests, data: { 'no-turbolink' => true }
            i.fa.fa-list-ol
            |  Request Queue

    ul.nav.navbar-nav.navbar-right
      - if teacher? && !cohorts.empty?
        li.dropdown.cohort
          = link_to '#', :class => 'dropdown-toggle', :"data-toggle" => 'dropdown' do
            = cohort.name
            b.caret
          span.dropdown-arrow
          ul.dropdown-menu
            - cohorts.each do |cohort|
              li
                = link_to cohort.name, [:switch_to, cohort], method: :put

      - if current_user
        - if current_user.active_student? && current_user.remote?
          li.dropdown
            = link_to "#", :class => "dropdown-toggle", :"data-toggle" => "dropdown" do
              | Streams
              b.caret
            span.dropdown-arrow
            ul.dropdown-menu
              - streams.each do |stream|
                li
                  = link_to stream.title, stream_path(stream)
        li.dropdown.student
          = link_to "#", :class => "dropdown-toggle", :"data-toggle" => "dropdown" do
            = image_tag avatar_for(current_user)
            = current_user.first_name
            = " (#{current_user.type})" if current_user.type?
            b.caret
          span.dropdown-arrow
          ul.dropdown-menu
            li
              = link_to "Edit profile", edit_profile_path
            li
              = link_to 'Sign Out', session_path, :method => :delete
        - if current_user.active_student?
          li#assistance-request-module
            span#cancel-assistance-request class="#{'hidden' unless current_user.waiting_for_assistance? || current_user.being_assisted?}"
              = link_to (current_user.being_assisted? ? ("#{current_user.current_assistor.try(:full_name) || 'TA'} assisting") : current_user.waiting_for_assistance? ? "No. #{current_user.position_in_queue || 1} in Request Queue" : 'Waiting for Assistance'), cancel_assistance_requests_path, method: :delete, remote: true, class: "navbar-btn btn btn-warning", 'data-toggle' => 'tooltip', 'data-placement' => 'bottom', 'title' => 'Cancel this Assistance Request'
            span#create-assistance-request class="#{'hidden' if current_user.waiting_for_assistance? || current_user.being_assisted?}"
              button.btn.navbar-btn.btn-primary data-toggle="modal" data-target="#assistance-request-reason-modal"
                | Request Assistance
      - else
        li
          = link_to "Sign In", new_session_path
      - if fools?
        li
          = link_to "Retina Mode", '#', class: 'btn btn-warning', id: 'a1-retina-mode', data: { 'no-turbolink' => true }
/! /.navbar-collapse
- if current_user && current_user.active_student?
  .modal.fade#assistance-request-reason-modal
    .modal-dialog
      .modal-content
        .modal-header
          button.close type='button' data-dismiss='modal'
            span aria-hidden='true'
              | &times;
            span.sr-only
              | Close
          h4.modal-title
            | Reason for Assistance
        = form_tag '/assistance_requests', method: 'post', remote: true, id: 'assistance-request-form'
          .modal-body
            .form-group
              = text_area_tag(:reason, nil, placeholder: 'What do you need assistance with?', class: 'form-control')
          .modal-footer
            button.btn.btn-default type='button' data-dismiss='modal'
              | Cancel
            = submit_tag 'Request Assistance', class: 'btn btn-primary'
