/ navigation styled for Bootstrap 3.0
nav.navbar.navbar-inverse.navbar-fixed-top role="navigation"
  .container-fluid
    .navbar-header
      button.navbar-toggle data-target=".navbar-collapse" data-toggle="collapse" type="button"
        span.sr-only Toggle navigation
        span.icon-bar
        span.icon-bar
        span.icon-bar
    .collapse.navbar-collapse
      ul.nav.navbar-nav.navbar-left
        li
          = link_to :welcome, title: 'Compass Home'
            i.fa.fa-fw.fa-compass
            span.visible-xs-inline
              | Home
        li
          = link_to setup_path, title: 'Setup'
            i.fa.fa-fw.fa-paper-plane-o
            span.non-tablet-label
              | Setup
        - if student?
          li
            = link_to '#', title: 'Search Activities', :id => 'search-activities-button'
              i.fa.fa-fw.fa-search
              span.non-tablet-label
                | Search
        - if current_user && !current_user.completed_registration?
          li
            = link_to edit_profile_path, title: 'Complete Signup'
              i.fa.fa-fw.fa-sign-in
              span.non-tablet-label
                | Complete Signup
        - if teacher? || active_student? || alumni?
          li
            = link_to day_path('today'), title: 'Schedule'
              i.fa.fa-fw.fa-calendar
              span.non-tablet-label
                | Schedule
          - if teacher?
            li.dropdown
              = link_to '#', :class => 'dropdown-toggle', :'data-toggle' => 'dropdown', title: 'Students'
                i.fa.fa-fw.fa-group
                span.non-tablet-label
                  | Students
                b.caret
              span.dropdown-arrow
              ul.dropdown-menu
                - cohorts.each do |cohort|
                  li
                    = link_to cohort_link(cohort), cohort_students_path(cohort)
          - else
            li.dropdown
              = link_to students_path,title: 'Classmates'
                i.fa.fa-fw.fa-group
                span.non-tablet-label
                  | Classmates
          li
            = link_to teachers_path,title: 'Teachers'
              i.fa.fa-fw.fa-group
              span.non-tablet-label
                | Teachers
        - if teacher?
          li
            = link_to :assistance_requests, data: { 'no-turbolink' => true }, title: 'Request Queue'
              i.fa.fa-fw.fa-list-ol
              span.non-tablet-label
                | Queue
        - if admin?
          li.dropdown
            = link_to '#', :class => 'dropdown-toggle', :'data-toggle' => 'dropdown', title: 'Admin'
              i.fa.fa-fw.fa-lock
              span.non-tablet-label
                | Admin
              b.caret
            span.dropdown-arrow
            ul.dropdown-menu
              li
                = link_to 'Cohorts', admin_cohorts_path
              li 
                = link_to 'Curriculum Feedback', admin_curriculum_feedbacks_path
              li 
                = link_to 'Teacher Feedback', admin_teacher_feedbacks_path
              li
                = link_to 'Day Feedback', admin_day_feedbacks_path  
              li
                = link_to 'Teacher Stats', admin_teacher_stats_path  
              li  
                = link_to 'Edit Profile', edit_admin_profile_path
      ul.nav.navbar-nav.navbar-right
        - if teacher? && !cohorts.empty?
          li.dropdown.cohort
            = link_to '#', :class => 'dropdown-toggle', :'data-toggle' => 'dropdown', title: 'Cohort' do
              = cohort.name
              b.caret
            span.dropdown-arrow
            ul.dropdown-menu
              - cohorts.each do |cohort|
                li
                  = link_to cohort.name, [:switch_to, cohort], method: :put
        - if current_user
          - if active_student?
            li
              = link_to feedbacks_path,title: 'Feedback'
                i.fa.fa-fw.fa-comment
                span.non-tablet-label id='feedback-link'
                  | Feedback (#{pending_feedbacks.count})
          - if current_user.active_student? && current_user.remote?
            li.dropdown
              = link_to '#', :class => 'dropdown-toggle', :'data-toggle' => 'dropdown', title: 'Streams' do
                i.fa.fa-fw.fa-video-camera
                span.non-tablet-label
                  | Streams
                b.caret
              span.dropdown-arrow
              ul.dropdown-menu
                - streams.each do |stream|
                  li
                    = link_to stream.title, stream_path(stream)

          li.dropdown.current-user
            = link_to '#', class: 'dropdown-toggle', :'data-toggle' => 'dropdown' do
              = current_user.first_name
              b.caret
            span.dropdown-arrow
            ul.dropdown-menu
              li
                = link_to 'Edit profile', edit_profile_path
              li
                = link_to 'Sign Out', session_path, :method => :delete, class: "sign-out-link" 
          -if teacher?
            li.teacher-duty
              span
                = link_to "Go on duty", '#', class: "on-duty-link navbar-btn btn btn-success #{'hidden' if current_user.on_duty?}"
                = link_to "Go off duty", '#', class: "off-duty-link navbar-btn btn btn-danger #{'hidden' unless current_user.on_duty?}"

          - if current_user.active_student?
            li#assistance-request-module
              span#cancel-assistance-request class="#{'hidden' unless current_user.waiting_for_assistance? || current_user.being_assisted?}"
                = link_to cancel_assistance_requests_path, method: :delete, remote: true, class: 'navbar-btn btn btn-warning cancel-request-assistance-button', :'data-toggle' => 'tooltip', :'data-placement' => 'bottom', title: 'Cancel this Assistance Request' do
                  - if current_user.being_assisted?
                    = "#{current_user.current_assistor.try(:full_name) || 'TA'} assisting"
                  - elsif current_user.waiting_for_assistance?
                    = "No. #{current_user.position_in_queue || 1} in Request Queue"
                  - else
                    = 'Waiting for Assistance'
              span#create-assistance-request class="#{'hidden' if current_user.waiting_for_assistance? || current_user.being_assisted?}"
                button.btn.navbar-btn.btn-primary data-toggle="modal" data-target="#assistance-request-reason-modal"
                  | Request Assistance
        - else
          li
            = link_to 'Sign In', new_session_path
        - if fools?
          li
            = link_to 'Retina Mode', '#', class: 'btn btn-warning', id: 'a1-retina-mode', data: { 'no-turbolink' => true }
- if current_user && current_user.active_student?
  .modal.fade#assistance-request-reason-modal
    .modal-dialog
      .modal-content
        .modal-header
          button.close type='button' data-dismiss='modal'
            span aria-hidden='true'
              | &times;
            span.sr-only
              | Close
          h4.modal-title
            | Reason for Assistance
        = form_tag '/assistance_requests', method: 'post', remote: true, id: 'assistance-request-form'
          .modal-body
            .form-group
              = text_area_tag(:reason, nil, placeholder: 'What do you need assistance with?', class: 'form-control')
          .modal-footer
            button.btn.btn-default type='button' data-dismiss='modal'
              | Cancel
            = submit_tag 'Request Assistance', class: 'btn btn-primary request-assistance-button', data: {dismiss: 'modal'}
